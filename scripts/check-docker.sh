#!/bin/bash

# Docker build and verification script

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
echo ""

# Check Docker files
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤:"
echo "  ‚úÖ Dockerfile: $(test -f Dockerfile && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ docker-compose.yml: $(test -f docker-compose.yml && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ .dockerignore: $(test -f .dockerignore && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo ""

# Check critical directories
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞:"
echo "  ‚úÖ backend/: $(test -d backend && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ frontend/: $(test -d frontend && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ backend/server.py: $(test -f backend/server.py && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ backend/requirements.txt: $(test -f backend/requirements.txt && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ frontend/package.json: $(test -f frontend/package.json && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ frontend/yarn.lock: $(test -f frontend/yarn.lock && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo "  ‚úÖ frontend/src/: $(test -d frontend/src && echo '–Ω–∞–π–¥–µ–Ω' || echo '‚ùå –ù–ï –ù–ê–ô–î–ï–ù')"
echo ""

# Check Dockerfile content
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile:"
if grep -q "node:20-alpine" Dockerfile; then
    echo "  ‚úÖ Node.js 20: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
else
    echo "  ‚ùå Node.js 20: –ù–ï –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è (—Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è React Router 7.9)"
fi

if grep -q "python:3.11" Dockerfile; then
    echo "  ‚úÖ Python 3.11: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
else
    echo "  ‚ö†Ô∏è  Python –≤–µ—Ä—Å–∏—è –Ω–µ 3.11"
fi

if grep -q "opencv-python-headless" backend/requirements.txt; then
    echo "  ‚úÖ OpenCV: –≤–∫–ª—é—á–µ–Ω –≤ requirements.txt"
else
    echo "  ‚ùå OpenCV: –ù–ï –Ω–∞–π–¥–µ–Ω –≤ requirements.txt"
fi

if grep -q "ffmpeg" Dockerfile; then
    echo "  ‚úÖ FFmpeg: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ Dockerfile"
else
    echo "  ‚ùå FFmpeg: –ù–ï –Ω–∞–π–¥–µ–Ω –≤ Dockerfile"
fi

echo ""

# What gets built
echo "üì¶ –ß—Ç–æ –±—É–¥–µ—Ç —Å–æ–±—Ä–∞–Ω–æ –≤ Docker:"
echo "  1. Frontend (React):"
echo "     - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ yarn.lock"
echo "     - –°–±–æ—Ä–∫–∞ production build"
echo "     - –†–µ–∑—É–ª—å—Ç–∞—Ç: /app/frontend/build"
echo ""
echo "  2. Backend (FastAPI):"
echo "     - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "     - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ backend –∫–æ–¥–∞"
echo "     - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ OpenCV + FFmpeg"
echo "     - –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–Ω–æ–≥–æ frontend"
echo ""
echo "  3. –í–µ–±-—Å–µ—Ä–≤–µ—Ä:"
echo "     - FastAPI —Ä–∞–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç–∏–∫—É frontend"
echo "     - API –Ω–∞ /api/*"
echo "     - SPA routing –¥–ª—è frontend"
echo ""

# Check what will be included
echo "üìã –ß—Ç–æ –ù–ï –ø–æ–ø–∞–¥–µ—Ç –≤ Docker (–∏–∑ .dockerignore):"
grep -v '^#' .dockerignore | grep -v '^$' | head -10 | while read line; do
    echo "  - $line"
done
echo ""

echo "üê≥ –ì–æ—Ç–æ–≤–æ –∫ —Å–±–æ—Ä–∫–µ Docker!"
echo ""
echo "–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–±–æ—Ä–∫–∏:"
echo "  docker-compose build"
echo "  docker-compose up -d"
echo ""
echo "–ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞:"
echo "  - –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://localhost:8001"
echo "  - API: http://localhost:8001/api"
echo "  - MongoDB: localhost:27017 (–≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)"
